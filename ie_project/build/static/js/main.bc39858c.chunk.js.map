{"version":3,"sources":["history.js","LoginPage.js","Presentations.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["history","LoginPage","props","state","email","password","loggIn","error","document","title","validateForm","bind","handleSubmit","this","length","event","preventDefault","axios","post","auth","username","then","response","status","setState","user","data","Cookies","set","id","token","push","catch","e","className","Form","onSubmit","Group","controlId","Label","Control","autoFocus","type","value","placeholder","onChange","target","Button","disabled","React","Component","sortByDate","a","b","Date","date","getTime","Presentations","presentations","sessions","schedules","searchString","filtered","isLoading","mapSchedules","handleChange","jsonData","key","key2","key3","temp","obj1","obj2","presentation","obj3","rooms","session","sessionName","name","localization","roomName","lat","lng","split","day","filter","Object","values","join","toLowerCase","match","presentationsPromise","get","schedulesPromise","roomsPromise","sessionsPromise","Promise","all","responseData","sesions","keys","console","log","sort","currentDay","createBrowserHistory","location","pathname","toString","substring","toUpperCase","currSessions","undefined","i","trim","pres","titles","sess","Navbar","bg","variant","Nav","Link","href","map","presDetail","Table","striped","width","Intl","DateTimeFormat","hour","minute","second","timeZone","format","filename","authors","Routing","exact","path","App","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bc39858c.chunk.js","sourcesContent":["import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport \"./LoginPage.css\";\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\nimport history from './history.js'\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email : \"\",\r\n            password : \"\",\r\n            loggIn: false,\r\n            error:\"\",\r\n        };\r\n        document.title=\"YIC Schedule\";\r\n\r\n\r\n        this.validateForm = this.validateForm.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    validateForm() {\r\n        return this.state.email.length > 0 && this.state.password.length > 5;\r\n    }\r\n\r\n     handleSubmit(event) {\r\n         event.preventDefault();\r\n         axios.post(\"https://ie2020.kisim.eu.org/api/auth\", {}, {\r\n            auth: {\r\n                username: this.state.email,\r\n                password: this.state.password\r\n            },\r\n        }).then((response) => {\r\n            if (response.status !== 201) {\r\n                throw response;\r\n            } else {\r\n                this.setState({loggIn: true});\r\n                const user = response.data.user;\r\n                Cookies.set(\"user\",{\r\n                    id: user.id, token: response.data.token, email: this.state.email\r\n                });\r\n                history.push('./monday');\r\n\r\n            }\r\n        }).catch((e) => {\r\n\r\n            if (e.response.status === 401) {\r\n                this.setState({error:\"Wrong username or password\"});\r\n            }\r\n            else if(e.response.status === 400){\r\n                this.setState({error: \"Enter valid email address\"});\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <h1>LOGIN PAGE</h1>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email  </Form.Label>\r\n                        <Form.Control\r\n                            autoFocus\r\n                            type=\"text\"\r\n                            value={this.state.email}\r\n                            placeholder=\"Enter email\"\r\n                            onChange={e => this.setState({email: e.target.value})}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\" >\r\n                        <Form.Label>Password  </Form.Label>\r\n                        <Form.Control\r\n                            value={this.state.password}\r\n                            placeholder=\"Enter password\"\r\n                            onChange={e => this.setState({password: e.target.value})}\r\n                            type=\"password\"\r\n                        />\r\n                        <div className=\"error\">{this.state.error}</div>\r\n                    </Form.Group>\r\n                    <Button disabled={!this.validateForm()} type=\"submit\"> Login </Button>\r\n                </Form>\r\n            </div>\r\n        );}\r\n}\r\n\r\n\r\nexport default LoginPage","import React, { Component } from 'react';\r\nimport './Presentations.css';\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport {createBrowserHistory} from 'history';\r\n\r\nfunction sortByDate(a,b) {\r\n    return new Date(a.date).getTime() - new Date(b.date).getTime();\r\n}\r\n\r\nclass Presentations extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            presentations: [],\r\n            sessions: [],\r\n            schedules: [],\r\n            searchString: \"\",\r\n            filtered: [],\r\n            isLoading: false,\r\n            data: [],\r\n        };\r\n\r\n        this.mapSchedules= this.mapSchedules.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n\r\n    }\r\n\r\n    mapSchedules(jsonData){\r\n        let key, key2, key3;\r\n        let obj1 = jsonData.sessions;\r\n        let obj2 = jsonData.presentation;\r\n        let obj3 = jsonData.rooms;\r\n        let temp;\r\n        for (key in obj2) {\r\n            temp = obj2[key].session;\r\n            for (key2 in obj1) {\r\n                if (key2 === temp) {\r\n                    obj2[key].sessionName = obj1[key2].name;\r\n                    obj2[key].localization = obj1[key2].localization;\r\n                }\r\n            }\r\n\r\n            for (key3 in obj3) {\r\n                temp = obj2[key].localization;\r\n                if (key3 === temp) {\r\n                    obj2[key].roomName = obj3[key3].name;\r\n                    obj2[key].lat = obj3[key3].lat;\r\n                    obj2[key].lng = obj3[key3].lng;\r\n                }\r\n            }\r\n\r\n            temp = obj2[key].date.split(\"T\");\r\n            switch(temp[0]) {\r\n                case '2019-09-02':\r\n                    obj2[key].day = 'MONDAY';\r\n                    break;\r\n                case '2019-09-03':\r\n                    obj2[key].day = 'TUESDAY';\r\n                    break;\r\n                case '2019-09-04':\r\n                    obj2[key].day = 'WEDNESDAY';\r\n                    break;\r\n                case '2019-09-05':\r\n                    obj2[key].day = 'THURSDAY';\r\n                    break;\r\n                case '2019-09-06':\r\n                    obj2[key].day = 'FRIDAY';\r\n                    break;\r\n                default: break;\r\n            }\r\n        }\r\n        return obj2;\r\n    }\r\n\r\n    handleChange(e) {\r\n        let value = e.target.value;\r\n        this.setState({\r\n            searchString: value,\r\n            filtered: this.state.data.filter(e =>\r\n                Object.values(e)\r\n                    .join(\" \")\r\n                    .toLowerCase()\r\n                    .match(value)\r\n            )\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title=\"YIC Schedule\";\r\n        const presentationsPromise = axios.get('https://ie2020.kisim.eu.org/api/presentations');\r\n        const schedulesPromise = axios.get('https://ie2020.kisim.eu.org/api/schedules');\r\n        const roomsPromise = axios.get('https://ie2020.kisim.eu.org/api/rooms');\r\n        const sessionsPromise = axios.get('https://ie2020.kisim.eu.org/api/sessions');\r\n\r\n        Promise.all([schedulesPromise, roomsPromise, sessionsPromise, presentationsPromise])\r\n            .then(([schedules, rooms, sessions, presentation]) => {\r\n            let responseData = {\r\n                schedules: schedules.data,\r\n                sessions: sessions.data,\r\n                rooms: rooms.data,\r\n                presentation: presentation.data,\r\n            };\r\n\r\n            let sesions = Object.keys(responseData.sessions);\r\n            responseData = this.mapSchedules(responseData);\r\n            this.setState({presentations: responseData});\r\n            this.setState({sessions: sesions});\r\n            this.setState({schedules: schedules.data});\r\n        }).catch(error => console.log(error));\r\n\r\n    };\r\n\r\n    render() {\r\n        const {presentations = []} = this.state;\r\n        const {schedules = []} = this.state;\r\n        presentations.sort(sortByDate);\r\n        const history = createBrowserHistory();\r\n        const currentDay = (history.location.pathname).toString().substring(1).toUpperCase();\r\n        let currSessions = [];\r\n\r\n        if((schedules[currentDay])!==undefined){\r\n            for(let i in schedules[currentDay])\r\n                currSessions.push(schedules[currentDay][i].sessions);\r\n        }\r\n\r\n        const searchString = this.state.searchString.trim().toLowerCase();\r\n        let data = this.state.presentations;\r\n\r\n        if (searchString.length > 0) {\r\n            data = data.filter(pres => {\r\n                let titles =  pres.title.toLowerCase().match(searchString);\r\n                let sess = pres.sessionName.toLowerCase().match(searchString);\r\n\r\n                if(titles!=null) return titles;\r\n                else if(sess!=null) return sess;\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        data=data.filter(pres=>{\r\n            return pres.day.toLowerCase().match(currentDay);\r\n        });\r\n\r\n        return(\r\n            <div>\r\n                <ul className=\"nav nav-pills\">\r\n                    <Navbar bg=\"dark\" variant=\"light\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/monday\">Monday</Nav.Link>\r\n                            <Nav.Link href=\"/tuesday\">Tuesday</Nav.Link>\r\n                            <Nav.Link href=\"/wednesday\">Wednesday</Nav.Link>\r\n                            <Nav.Link href=\"/thursday\">Thursday</Nav.Link>\r\n                            <Nav.Link href=\"/friday\">Friday</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar>\r\n                </ul>\r\n                <input className={\"inputClass\"} placeholder={\"Search presentations by title or session name\"}\r\n                    value={this.state.searchString} onChange={this.handleChange}/>\r\n\r\n            <h1>ECCOMAS YIC2019</h1>\r\n                {data.map((presDetail) => {\r\n                    //if(presDetail.day===currentDay){\r\n                       // for(let i in currSessions){\r\n                     //       for(let j in currSessions[i])\r\n                       //     if(presDetail.session===currSessions[i][j])\r\n                        return <div key={presDetail.id}>\r\n                            <b className={'sessions'}>{presDetail.sessionName}</b>\r\n                            <Table striped>\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td  width=\"20%\">{new Intl.DateTimeFormat('en-PL', {\r\n                                                hour: 'numeric',\r\n                                                minute: 'numeric',\r\n                                                second: 'numeric',\r\n                                                timeZone: 'UTC'\r\n                                            }).format(new Date(presDetail.date))}</td>\r\n                                            <td >\r\n                                                <Nav.Link className={'link'} href = {presDetail.filename!==\"\" ? 'https://ie2020.kisim.eu.org/api/abstracts/'\r\n                                                + presDetail.filename: \"\"} disabled={this.href === \"\"}>{presDetail.title}</Nav.Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                            <Nav.Link className={'link'} href={'https://www.google.pl/maps/place/'\r\n                                            +presDetail.lat+','+presDetail.lng}>{presDetail.roomName}</Nav.Link>\r\n                                            </td>\r\n                                            <td>{presDetail.authors.join(\", \")}</td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                   // }//}\r\n            })}\r\n            </div>\r\n\r\n        )}\r\n}\r\n\r\nexport default Presentations;","import React from 'react'\r\nimport {\r\n    Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport LoginPage from \"./LoginPage.js\";\r\nimport Presentations from \"./Presentations.js\";\r\nimport history from './history';\r\n\r\nexport const Routing = () => {\r\n    return (\r\n        <Router history= {history}>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <LoginPage/>\r\n                </Route>\r\n                <Route path=\"/monday\">\r\n                    <Presentations/>\r\n                </Route>\r\n                <Route path=\"/tuesday\">\r\n                    <Presentations/>\r\n                </Route>\r\n                <Route path=\"/wednesday\">\r\n                    <Presentations/>\r\n                </Route>\r\n                <Route path=\"/thursday\">\r\n                    <Presentations/>\r\n                </Route>\r\n                <Route path=\"/friday\">\r\n                    <Presentations/>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n};","import React from 'react';\nimport './App.css';\n\nimport {Routing} from './Routes'\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n            <Routing/>\n        </Router>\n    </div>\n);\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}